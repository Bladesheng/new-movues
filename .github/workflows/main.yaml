# This workflow automatically builds static files and deploys them to Cloudflare Pages
# whenever something is pushed / merged into main branch

name: Cloudflare Pages build and deployment

on:
  # this workflow will get triggered when pushing to main but also when merging PR
  push:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Allow one concurrent deployment
concurrency:
  group: 'pages'
  cancel-in-progress: true

jobs:
  job-1:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Create Node Environment
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8
          run_install: false

      - name: Install Packages
        run: pnpm install --frozen-lockfile

      - name: Build Application
        run: pnpm run build-only

      - name: Upload static files artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist
          name: build-artifact

  # How to get the credentials
  # https://developers.cloudflare.com/pages/how-to/use-direct-upload-with-continuous-integration/#get-credentials-from-cloudflare
  # Note: there cannot be top level 404.html or SPA rendering won't work because Cloudflare pages will look for non-existing .html files
  # https://developers.cloudflare.com/pages/configuration/serving-pages/#single-page-application-spa-rendering
  job-2:
    name: Deploy to Cloudflare Pages
    needs: job-1
    runs-on: ubuntu-latest

    permissions:
      contents: read
      deployments: write

    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact
          path: dist

      - name: Upload artifact to Cloudflare Pages
        uses: cloudflare/pages-action@1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: new-movues
          directory: dist
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
